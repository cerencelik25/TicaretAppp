// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicaretApp.DataAccess.Concrete.EfCore;

namespace TicaretApp.DataAccess.Migrations
{
    [DbContext(typeof(TicaretContext))]
    [Migration("20210602170936_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TicaretApp.Entities.Kart", b =>
                {
                    b.Property<int>("KartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KartId");

                    b.ToTable("Karts");
                });

            modelBuilder.Entity("TicaretApp.Entities.KartItem", b =>
                {
                    b.Property<int>("KartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<int>("KartId")
                        .HasColumnType("int");

                    b.Property<int>("KitapId")
                        .HasColumnType("int");

                    b.HasKey("KartItemId");

                    b.HasIndex("KartId");

                    b.HasIndex("KitapId");

                    b.ToTable("KartItem");
                });

            modelBuilder.Entity("TicaretApp.Entities.Kategori", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KategoriAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriId");

                    b.ToTable("Kategoris");
                });

            modelBuilder.Entity("TicaretApp.Entities.Kitap", b =>
                {
                    b.Property<int>("KitapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Fiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KitapAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KitapturId")
                        .HasColumnType("int");

                    b.Property<int?>("StokAdedi")
                        .HasColumnType("int");

                    b.Property<int>("YayineviId")
                        .HasColumnType("int");

                    b.Property<string>("Yayinyili")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YazarId")
                        .HasColumnType("int");

                    b.Property<int>("YorumId")
                        .HasColumnType("int");

                    b.HasKey("KitapId");

                    b.ToTable("Kitaps");
                });

            modelBuilder.Entity("TicaretApp.Entities.KitapKategori", b =>
                {
                    b.Property<int>("KitapId")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.HasKey("KitapId", "KategoriId");

                    b.HasIndex("KategoriId");

                    b.ToTable("KitapKategori");
                });

            modelBuilder.Entity("TicaretApp.Entities.KartItem", b =>
                {
                    b.HasOne("TicaretApp.Entities.Kart", "Kart")
                        .WithMany("KartItems")
                        .HasForeignKey("KartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicaretApp.Entities.Kitap", "Kitap")
                        .WithMany()
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TicaretApp.Entities.KitapKategori", b =>
                {
                    b.HasOne("TicaretApp.Entities.Kategori", "Kategori")
                        .WithMany("KitapKategoris")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicaretApp.Entities.Kitap", "Kitap")
                        .WithMany("KitapKategoris")
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
